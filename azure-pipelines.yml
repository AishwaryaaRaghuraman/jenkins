# Azure Pipelines YAML file for Springboot Maven application

# Variables
variables:
  # Git repository details
  gitUsername: $(gitUsername)
  repoName: $(repoName)
  branchName: $(branchName)

  # Maven settings
  mavenSettings: $(mavenSettings)

  # SonarQube details
  sonarQubeUrl: $(sonarQubeUrl)
  sonarQubeToken: $(sonarQubeToken)

  # Nexus details
  nexusUrl: $(nexusUrl)
  nexusUsername: $(nexusUsername)
  nexusPassword: $(nexusPassword)

# Stages
stages:
  - Clone
  - Build
  - SonarQube Scan
  - Quality Gate
  - Clean
  - Publish

# Jobs
jobs:
  # Clone the Git repository
  Clone:
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - checkout: self
        clean: true
        lfs: true
        submodules: true
        sshKey: $(gitUsername)

  # Build the Springboot application using Maven
  Build:
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: UseMaven@1
        inputs:
          mavenVersion: '3.x'
          mavenAuthenticateFeed: true
          mavenSettingsFile: $(mavenSettings)
          goals: 'clean package'

  # Perform SonarQube scan
  SonarQube Scan:
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: SonarQubePrepare@4
        inputs:
          SonarQube: $(sonarQubeUrl)
          scannerMode: 'MSBuild'
          projectKey: $(repoName)
          projectName: $(repoName)
          projectVersion: '1.0'

      - task: SonarQubeAnalyze@4

  # Check the quality gate status
  Quality Gate:
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: SonarQubePublish@4
        inputs:
          SonarQube: $(sonarQubeUrl)
          publishResults: true

  # Clean the local directory
  Clean:
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - script: rm -rf $(Build.SourcesDirectory)/target

  # Publish the artifact to Nexus
  Publish:
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: NpmAuthenticate@1
        inputs:
          registryUrl: $(nexusUrl)
          allowCustomRegistry: true
          customRegistry: $(nexusUrl)
          username: $(nexusUsername)
          password: $(nexusPassword)

      - task: NpmPublish@1
        inputs:
          pathToPackage: $(Build.ArtifactStagingDirectory)
          registryUrl: $(nexusUrl)
          allowCustomRegistry: true
          customRegistry: $(nexusUrl)