parameters:
- name: gitUsername
  type: string
- name: repoName
  type: string
- name: branchName
  type: string
- name: dockerImageName
  type: string
  default: myapp
- name: sonarqubeProjectKey
  type: string
  default: myapp
- name: sonarqubeUrl
  type: string
  default: http://localhost:9000
- name: sonarqubeToken
  type: string
 
trigger:
- main
 
pool: default
 
steps:
- script: echo "Git Clone"
  displayName: 'Git Clone'
  env:
    GIT_USERNAME: $(gitUsername)
    REPO_NAME: $(repoName)
    BRANCH_NAME: $(branchName)
  continueOnError: false
 
- script: |
    echo "Building Docker Image"
    sudo docker build -t $(dockerImageName) .
  displayName: 'Build Docker Image'
 
- script: |
    echo "Running SonarQube Scan"
    sudo docker run -e SONAR_HOST_URL=$(sonarqubeUrl) \
                  -e SONAR_LOGIN=$(sonarqubeToken) \
                  -e SONAR_PROJECT_KEY=$(sonarqubeProjectKey) \
                  $(dockerImageName)
  displayName: 'Run SonarQube Scan'
 
- script: |
    echo "Cleaning Local Directory"
    sudo rm -rf *
  displayName: 'Clean Local Directory'
 
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)'
    artifact: 'build-artifact'
    publishLocation: 'pipeline'